{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilmehra/Downloads/prototype/final/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { io } from 'socket.io-client';\nimport SlotGrid from './SlotGrid';\nimport AnalyticsPage from './AnalyticsPage';\nimport TimeSelector from './TimeSelector';\nimport AuthPage from './AuthPage'; // <--- Add this import\nimport './App.css';\nimport { Chart as ChartJS, ArcElement, BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  // --- 1. Track current user from localStorage ---\n  const [currentUser, setCurrentUser] = useState(localStorage.getItem('currentUser'));\n  // --- 2. All your existing state ---\n  const [slots, setSlots] = useState([]);\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  const [showAnalytics, setShowAnalytics] = useState(false);\n  const [date, setDate] = useState('');\n  const [start, setStart] = useState('');\n  const [end, setEnd] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [availableSlotData, setAvailableSlotData] = useState([]);\n  const [socket, setSocket] = useState(null);\n\n  // --- 3. Callback for successful AuthPage login ---\n  const handleAuthSuccess = () => {\n    setCurrentUser(localStorage.getItem('currentUser'));\n  };\n\n  // --- 4. Callback for logout button ---\n  const handleLogout = () => {\n    localStorage.removeItem('currentUser');\n    setCurrentUser(null);\n  };\n\n  // --- 5. If no user, show AuthPage. NO CHANGE to rest of logic. ---\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(AuthPage, {\n      onAuthSuccess: handleAuthSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n\n  // --- 6. Your existing initialization and logic ---\n  useEffect(() => {\n    const newSocket = io('http://localhost:4000');\n    setSocket(newSocket);\n    return () => newSocket.close();\n  }, []);\n  useEffect(() => {\n    if (!date || !start || !end || !endDate) return;\n    fetch('http://localhost:4000/api/available-slots', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date,\n        start,\n        end,\n        endDate\n      })\n    }).then(res => res.json()).then(data => setAvailableSlotData(data.slots));\n  }, [date, start, end, endDate]);\n  const toggleSlotSelection = slotId => {\n    setSelectedSlots(prev => prev.includes(slotId) ? prev.filter(id => id !== slotId) : [...prev, slotId]);\n  };\n  const totalPrice = useMemo(() => {\n    return selectedSlots.reduce((sum, slotId) => {\n      const slot = availableSlotData.find(s => s.id === slotId);\n      return sum + ((slot === null || slot === void 0 ? void 0 : slot.price) || 0);\n    }, 0);\n  }, [selectedSlots, availableSlotData]);\n  const handleReserveSelected = () => {\n    if (selectedSlots.length === 0) {\n      alert('Please select at least one slot.');\n      return;\n    }\n    if (!date || !start || !end || !endDate) {\n      alert('Please select date and time.');\n      return;\n    }\n    if (!socket) {\n      alert('Connection error. Please refresh the page.');\n      return;\n    }\n    socket.emit('bookBulk', {\n      slotIds: selectedSlots,\n      date,\n      start,\n      end,\n      endDate\n    }, response => {\n      if (response.success) {\n        alert('Reservation successful!');\n        setSelectedSlots([]);\n      } else {\n        alert(response.msg || 'Reservation failed. Please try again.');\n      }\n    });\n  };\n\n  // --- 7. Your UI with LOGOUT BUTTON in header ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Parking Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), showAnalytics ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"analytics-btn\",\n        onClick: () => setShowAnalytics(false),\n        children: \"\\u2190 Back to Slots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AnalyticsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TimeSelector, {\n        date: date,\n        setDate: setDate,\n        start: start,\n        setStart: setStart,\n        end: end,\n        setEnd: setEnd,\n        endDate: endDate,\n        setEndDate: setEndDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"price-sum\",\n          children: selectedSlots.length ? `Total Price: €${totalPrice}` : 'Select slot(s)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"reserve-btn\",\n          onClick: handleReserveSelected,\n          children: [\"Reserve Selected (\", selectedSlots.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"analytics-btn\",\n          onClick: () => setShowAnalytics(true),\n          children: \"Show Analytics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Status, {\n        slots: slots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SlotGrid, {\n        slots: slots,\n        date: date,\n        start: start,\n        end: end,\n        endDate: endDate,\n        selectedSlots: selectedSlots,\n        toggleSlotSelection: toggleSlotSelection,\n        availableSlotData: availableSlotData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/PogaHzMT1Has+ojvKCriyX59bI=\");\n_c = App;\nfunction Status({\n  slots\n}) {\n  const available = slots.filter(s => s.status === 'available').length;\n  const reserved = slots.filter(s => s.status === 'reserved').length;\n  const outOfOrder = slots.filter(s => s.status === 'out_of_order').length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"status\",\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Status:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), \" Available: \", available, \" | Reserved: \", reserved, \" | Out of Order: \", outOfOrder]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Status;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Status\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","io","SlotGrid","AnalyticsPage","TimeSelector","AuthPage","Chart","ChartJS","ArcElement","BarElement","CategoryScale","LinearScale","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","App","_s","currentUser","setCurrentUser","localStorage","getItem","slots","setSlots","selectedSlots","setSelectedSlots","showAnalytics","setShowAnalytics","date","setDate","start","setStart","end","setEnd","endDate","setEndDate","availableSlotData","setAvailableSlotData","socket","setSocket","handleAuthSuccess","handleLogout","removeItem","onAuthSuccess","fileName","_jsxFileName","lineNumber","columnNumber","newSocket","close","fetch","method","headers","body","JSON","stringify","then","res","json","data","toggleSlotSelection","slotId","prev","includes","filter","id","totalPrice","reduce","sum","slot","find","s","price","handleReserveSelected","length","alert","emit","slotIds","response","success","msg","className","children","onClick","Fragment","Status","_c","available","status","reserved","outOfOrder","_c2","$RefreshReg$"],"sources":["/Users/nikhilmehra/Downloads/prototype/final/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport { io } from 'socket.io-client';\nimport SlotGrid from './SlotGrid';\nimport AnalyticsPage from './AnalyticsPage';\nimport TimeSelector from './TimeSelector';\nimport AuthPage from './AuthPage'; // <--- Add this import\nimport './App.css';\nimport { Chart as ChartJS, ArcElement, BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from 'chart.js';\nChartJS.register(\n  ArcElement, BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend\n);\n\nfunction App() {\n  // --- 1. Track current user from localStorage ---\n  const [currentUser, setCurrentUser] = useState(localStorage.getItem('currentUser'));\n  // --- 2. All your existing state ---\n  const [slots, setSlots] = useState([]);\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  const [showAnalytics, setShowAnalytics] = useState(false);\n  const [date, setDate] = useState('');\n  const [start, setStart] = useState('');\n  const [end, setEnd] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [availableSlotData, setAvailableSlotData] = useState([]);\n  const [socket, setSocket] = useState(null);\n\n  // --- 3. Callback for successful AuthPage login ---\n  const handleAuthSuccess = () => {\n    setCurrentUser(localStorage.getItem('currentUser'));\n  };\n\n  // --- 4. Callback for logout button ---\n  const handleLogout = () => {\n    localStorage.removeItem('currentUser');\n    setCurrentUser(null);\n  };\n\n  // --- 5. If no user, show AuthPage. NO CHANGE to rest of logic. ---\n  if (!currentUser) {\n    return <AuthPage onAuthSuccess={handleAuthSuccess} />;\n  }\n\n  // --- 6. Your existing initialization and logic ---\n  useEffect(() => {\n    const newSocket = io('http://localhost:4000');\n    setSocket(newSocket);\n    return () => newSocket.close();\n  }, []);\n\n  useEffect(() => {\n    if (!date || !start || !end || !endDate) return;\n    fetch('http://localhost:4000/api/available-slots', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ date, start, end, endDate })\n    })\n      .then((res) => res.json())\n      .then((data) => setAvailableSlotData(data.slots));\n  }, [date, start, end, endDate]);\n\n  const toggleSlotSelection = (slotId) => {\n    setSelectedSlots((prev) =>\n      prev.includes(slotId) ? prev.filter((id) => id !== slotId) : [...prev, slotId]\n    );\n  };\n\n  const totalPrice = useMemo(() => {\n    return selectedSlots.reduce((sum, slotId) => {\n      const slot = availableSlotData.find((s) => s.id === slotId);\n      return sum + (slot?.price || 0);\n    }, 0);\n  }, [selectedSlots, availableSlotData]);\n\n  const handleReserveSelected = () => {\n    if (selectedSlots.length === 0) {\n      alert('Please select at least one slot.');\n      return;\n    }\n    if (!date || !start || !end || !endDate) {\n      alert('Please select date and time.');\n      return;\n    }\n    if (!socket) {\n      alert('Connection error. Please refresh the page.');\n      return;\n    }\n    socket.emit(\n      'bookBulk',\n      { slotIds: selectedSlots, date, start, end, endDate },\n      (response) => {\n        if (response.success) {\n          alert('Reservation successful!');\n          setSelectedSlots([]);\n        } else {\n          alert(response.msg || 'Reservation failed. Please try again.');\n        }\n      }\n    );\n  };\n\n  // --- 7. Your UI with LOGOUT BUTTON in header ---\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Parking Dashboard</h1>\n        <button className=\"logout-btn\" onClick={handleLogout}>\n          Logout\n        </button>\n      </header>\n\n      {showAnalytics ? (\n        <React.Fragment>\n          <button\n            className=\"analytics-btn\"\n            onClick={() => setShowAnalytics(false)}\n          >\n            ← Back to Slots\n          </button>\n          <AnalyticsPage />\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <TimeSelector\n            date={date}\n            setDate={setDate}\n            start={start}\n            setStart={setStart}\n            end={end}\n            setEnd={setEnd}\n            endDate={endDate}\n            setEndDate={setEndDate}\n          />\n          <div className=\"slot-actions\">\n            <span className=\"price-sum\">\n              {selectedSlots.length ? `Total Price: €${totalPrice}` : 'Select slot(s)'}\n            </span>\n            <button id=\"reserve-btn\" onClick={handleReserveSelected}>\n              Reserve Selected ({selectedSlots.length})\n            </button>\n            <button\n              id=\"analytics-btn\"\n              onClick={() => setShowAnalytics(true)}\n            >\n              Show Analytics\n            </button>\n          </div>\n          <Status slots={slots} />\n          <SlotGrid\n            slots={slots}\n            date={date}\n            start={start}\n            end={end}\n            endDate={endDate}\n            selectedSlots={selectedSlots}\n            toggleSlotSelection={toggleSlotSelection}\n            availableSlotData={availableSlotData}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nfunction Status({ slots }) {\n  const available = slots.filter((s) => s.status === 'available').length;\n  const reserved = slots.filter((s) => s.status === 'reserved').length;\n  const outOfOrder = slots.filter((s) => s.status === 'out_of_order').length;\n  return (\n    <div className=\"status\">\n      <strong>Status:</strong> Available: {available} | Reserved: {reserved} |\n      Out of Order: {outOfOrder}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
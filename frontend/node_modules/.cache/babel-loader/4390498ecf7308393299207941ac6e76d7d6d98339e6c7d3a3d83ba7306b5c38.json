{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilmehra/Downloads/prototype/ise-prototype/frontend/src/AnalyticsPage.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { Doughnut, Bar } from \"react-chartjs-2\";\n// import \"./App.css\";\n\n// export default function AnalyticsPage() {\n//   const [analytics, setAnalytics] = useState({ slots: [], summary: { statusCounts: {} } });\n//   const [showMode, setShowMode] = useState(\"top10\");\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:4000/api/analytics\")\n//       .then((res) => res.json())\n//       .then(setAnalytics);\n//   }, []);\n\n//   const { slots, summary } = analytics;\n//   const statusCounts = summary.statusCounts || { \"available\": 0, \"reserved\": 0, \"out_of_order\": 0 };\n\n//   // Choose Top 10 or All\n//   const topNSlots = [...slots]\n//     .sort((a, b) => b.totalRevenue - a.totalRevenue)\n//     .slice(0, showMode === \"top10\" ? 10 : slots.length);\n\n//   const doughnutData = {\n//     labels: [\"Available\", \"Reserved\", \"Out of Order\"],\n//     datasets: [\n//       {\n//         data: [\n//           statusCounts.available || 0,\n//           statusCounts.reserved || 0,\n//           statusCounts.out_of_order || 0,\n//         ],\n//         backgroundColor: [\"#43a047\", \"#e53935\", \"#757575\"],\n//         borderWidth: 2,\n//       }\n//     ]\n//   };\n\n//   const barChartData = {\n//     labels: topNSlots.map(slot => `Slot ${slot.id}`),\n//     datasets: [\n//       {\n//         label: \"Bookings\",\n//         data: topNSlots.map(slot => slot.totalBookings),\n//         backgroundColor: \"#1976d2\",\n//         borderRadius: 6,\n//         maxBarThickness: 28,\n//       },\n//       {\n//         label: \"Revenue (€)\",\n//         data: topNSlots.map(slot => slot.totalRevenue),\n//         backgroundColor: \"#ff9800\",\n//         borderRadius: 6,\n//         maxBarThickness: 28,\n//       },\n//     ],\n//   };\n\n//   const chartOptions = {\n//     plugins: { legend: { position: \"bottom\" } },\n//     responsive: true,\n//     maintainAspectRatio: false,\n//     barPercentage: 0.9,\n//     categoryPercentage: 0.9,\n//     scales: {\n//       x: {\n//         stacked: true,\n//         grid: { display: false },\n//         ticks: {\n//           autoSkip: true,\n//           maxRotation: 45,\n//           minRotation: 45,\n//         }\n//       },\n//       y: { beginAtZero: true, grid: { color: \"#ccc\" } }\n//     }\n//   };\n\n//   return (\n//     <div className=\"analytics-page\">\n//       <div className=\"analytics-summary\">\n//         <h2>Analytics Overview</h2>\n//         <div className=\"summary-cards\">\n//           <div className=\"summary-card\">\n//             <span>Total Slots</span>\n//             <strong>{summary.totalSlots}</strong>\n//           </div>\n//           <div className=\"summary-card\">\n//             <span>Total Bookings</span>\n//             <strong>{summary.totalBookings}</strong>\n//           </div>\n//           <div className=\"summary-card\">\n//             <span>Total Revenue</span>\n//             <strong>€{summary.totalRevenue || 0}</strong>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"charts-section\">\n//         <div className=\"chart-card\">\n//           <h3>Slot Status</h3>\n//           <Doughnut data={doughnutData} options={{ plugins: { legend: { position: \"bottom\" } } }} />\n//         </div>\n//         <div className=\"chart-card\">\n//           <h3>\n//             Performance by Slot\n//             <div className=\"chart-mode-tabs\">\n//               <button className={showMode === \"top10\" ? \"active\" : \"\"} onClick={() => setShowMode(\"top10\")}>\n//                 Top 10\n//               </button>\n//               <button className={showMode === \"all\" ? \"active\" : \"\"} onClick={() => setShowMode(\"all\")}>\n//                 All Slots\n//               </button>\n//             </div>\n//           </h3>\n//           <div className=\"bar-chart-container\">\n//             <Bar data={barChartData} options={chartOptions} />\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"leaderboard-section\">\n//         <h3>Slot Leaderboard</h3>\n//         <table className=\"analytics-table\">\n//           <thead>\n//             <tr>\n//               <th>Rank</th>\n//               <th>Slot ID</th>\n//               <th>Status</th>\n//               <th>Bookings</th>\n//               <th>Revenue (€)</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {topNSlots.map((slot, i) => (\n//               <tr key={slot.id}>\n//                 <td>{i + 1}</td>\n//                 <td>{slot.id}</td>\n//                 <td>\n//                   <span className={`status-badge status-${slot.status}`}>\n//                     {slot.status.replaceAll(\"_\", \" \")}\n//                   </span>\n//                 </td>\n//                 <td>{slot.totalBookings}</td>\n//                 <td>€{slot.totalRevenue}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AnalyticsPage() {\n  _s();\n  const [analytics, setAnalytics] = useState({\n    slots: [],\n    summary: {\n      statusCounts: {}\n    }\n  });\n  const [showMode, setShowMode] = useState(\"top10\");\n  useEffect(() => {\n    fetch(\"http://localhost:4000/api/analytics\").then(res => res.json()).then(setAnalytics);\n  }, []);\n  const {\n    slots,\n    summary\n  } = analytics;\n\n  // Calculate sensor status counts (for new doughnut chart)\n  const sensorStatusCounts = slots.reduce((acc, slot) => {\n    if (slot.sensorStatus === \"working\") acc.working += 1;else if (slot.sensorStatus === \"out_of_status\") acc.outOfStatus += 1;\n    return acc;\n  }, {\n    working: 0,\n    outOfStatus: 0\n  });\n\n  // Prepare sensor status doughnut data\n  const sensorDoughnutData = {\n    labels: [\"Working Properly\", \"Out of Status\"],\n    datasets: [{\n      data: [sensorStatusCounts.working, sensorStatusCounts.outOfStatus],\n      backgroundColor: [\"var(--success)\", \"var(--error)\"],\n      borderWidth: 2\n    }]\n  };\n\n  // Bar chart data (unchanged)\n  const topNSlots = [...slots].sort((a, b) => b.totalRevenue - a.totalRevenue).slice(0, showMode === \"top10\" ? 10 : slots.length);\n  const barChartData = {\n    labels: topNSlots.map(slot => `Slot ${slot.id}`),\n    datasets: [{\n      label: \"Bookings\",\n      data: topNSlots.map(slot => slot.totalBookings),\n      backgroundColor: \"#1976d2\",\n      borderRadius: 6,\n      maxBarThickness: 28\n    }, {\n      label: \"Revenue (€)\",\n      data: topNSlots.map(slot => slot.totalRevenue),\n      backgroundColor: \"#ff9800\",\n      borderRadius: 6,\n      maxBarThickness: 28\n    }]\n  };\n  const chartOptions = {\n    plugins: {\n      legend: {\n        position: \"bottom\"\n      }\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    barPercentage: 0.9,\n    categoryPercentage: 0.9,\n    scales: {\n      x: {\n        stacked: true,\n        grid: {\n          display: false\n        },\n        ticks: {\n          autoSkip: true,\n          maxRotation: 45,\n          minRotation: 45\n        }\n      },\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: \"#ccc\"\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-summary\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-cards\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Total Slots\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: slots.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Slot Sensor Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n          data: sensorDoughnutData,\n          options: {\n            plugins: {\n              legend: {\n                position: \"bottom\"\n              }\n            }\n          },\n          height: 280\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Top Slots\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chart-mode-tabs\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: showMode === \"top10\" ? \"active\" : \"\",\n              onClick: () => setShowMode(\"top10\"),\n              children: \"Top 10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: showMode === \"all\" ? \"active\" : \"\",\n              onClick: () => setShowMode(\"all\"),\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar-chart-container\",\n          style: {\n            height: 340\n          },\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            data: barChartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Slot Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"analytics-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Slot ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Bookings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Revenue (\\u20AC)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: topNSlots.map((slot, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: i + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: slot.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (slot.status || \"\").replaceAll(\"_\", \" \")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: slot.totalBookings\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"\\u20AC\", slot.totalRevenue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this)]\n          }, slot.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n_s(AnalyticsPage, \"lovD9N8DOFqaVgMIWppNFK1lvzQ=\");\n_c = AnalyticsPage;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsPage\");","map":{"version":3,"names":["React","useEffect","useState","Doughnut","Bar","jsxDEV","_jsxDEV","AnalyticsPage","_s","analytics","setAnalytics","slots","summary","statusCounts","showMode","setShowMode","fetch","then","res","json","sensorStatusCounts","reduce","acc","slot","sensorStatus","working","outOfStatus","sensorDoughnutData","labels","datasets","data","backgroundColor","borderWidth","topNSlots","sort","a","b","totalRevenue","slice","length","barChartData","map","id","label","totalBookings","borderRadius","maxBarThickness","chartOptions","plugins","legend","position","responsive","maintainAspectRatio","barPercentage","categoryPercentage","scales","x","stacked","grid","display","ticks","autoSkip","maxRotation","minRotation","y","beginAtZero","color","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","height","onClick","style","i","status","replaceAll","_c","$RefreshReg$"],"sources":["/Users/nikhilmehra/Downloads/prototype/ise-prototype/frontend/src/AnalyticsPage.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import { Doughnut, Bar } from \"react-chartjs-2\";\n// import \"./App.css\";\n\n// export default function AnalyticsPage() {\n//   const [analytics, setAnalytics] = useState({ slots: [], summary: { statusCounts: {} } });\n//   const [showMode, setShowMode] = useState(\"top10\");\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:4000/api/analytics\")\n//       .then((res) => res.json())\n//       .then(setAnalytics);\n//   }, []);\n\n//   const { slots, summary } = analytics;\n//   const statusCounts = summary.statusCounts || { \"available\": 0, \"reserved\": 0, \"out_of_order\": 0 };\n\n//   // Choose Top 10 or All\n//   const topNSlots = [...slots]\n//     .sort((a, b) => b.totalRevenue - a.totalRevenue)\n//     .slice(0, showMode === \"top10\" ? 10 : slots.length);\n\n//   const doughnutData = {\n//     labels: [\"Available\", \"Reserved\", \"Out of Order\"],\n//     datasets: [\n//       {\n//         data: [\n//           statusCounts.available || 0,\n//           statusCounts.reserved || 0,\n//           statusCounts.out_of_order || 0,\n//         ],\n//         backgroundColor: [\"#43a047\", \"#e53935\", \"#757575\"],\n//         borderWidth: 2,\n//       }\n//     ]\n//   };\n\n//   const barChartData = {\n//     labels: topNSlots.map(slot => `Slot ${slot.id}`),\n//     datasets: [\n//       {\n//         label: \"Bookings\",\n//         data: topNSlots.map(slot => slot.totalBookings),\n//         backgroundColor: \"#1976d2\",\n//         borderRadius: 6,\n//         maxBarThickness: 28,\n//       },\n//       {\n//         label: \"Revenue (€)\",\n//         data: topNSlots.map(slot => slot.totalRevenue),\n//         backgroundColor: \"#ff9800\",\n//         borderRadius: 6,\n//         maxBarThickness: 28,\n//       },\n//     ],\n//   };\n\n//   const chartOptions = {\n//     plugins: { legend: { position: \"bottom\" } },\n//     responsive: true,\n//     maintainAspectRatio: false,\n//     barPercentage: 0.9,\n//     categoryPercentage: 0.9,\n//     scales: {\n//       x: {\n//         stacked: true,\n//         grid: { display: false },\n//         ticks: {\n//           autoSkip: true,\n//           maxRotation: 45,\n//           minRotation: 45,\n//         }\n//       },\n//       y: { beginAtZero: true, grid: { color: \"#ccc\" } }\n//     }\n//   };\n\n//   return (\n//     <div className=\"analytics-page\">\n//       <div className=\"analytics-summary\">\n//         <h2>Analytics Overview</h2>\n//         <div className=\"summary-cards\">\n//           <div className=\"summary-card\">\n//             <span>Total Slots</span>\n//             <strong>{summary.totalSlots}</strong>\n//           </div>\n//           <div className=\"summary-card\">\n//             <span>Total Bookings</span>\n//             <strong>{summary.totalBookings}</strong>\n//           </div>\n//           <div className=\"summary-card\">\n//             <span>Total Revenue</span>\n//             <strong>€{summary.totalRevenue || 0}</strong>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"charts-section\">\n//         <div className=\"chart-card\">\n//           <h3>Slot Status</h3>\n//           <Doughnut data={doughnutData} options={{ plugins: { legend: { position: \"bottom\" } } }} />\n//         </div>\n//         <div className=\"chart-card\">\n//           <h3>\n//             Performance by Slot\n//             <div className=\"chart-mode-tabs\">\n//               <button className={showMode === \"top10\" ? \"active\" : \"\"} onClick={() => setShowMode(\"top10\")}>\n//                 Top 10\n//               </button>\n//               <button className={showMode === \"all\" ? \"active\" : \"\"} onClick={() => setShowMode(\"all\")}>\n//                 All Slots\n//               </button>\n//             </div>\n//           </h3>\n//           <div className=\"bar-chart-container\">\n//             <Bar data={barChartData} options={chartOptions} />\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"leaderboard-section\">\n//         <h3>Slot Leaderboard</h3>\n//         <table className=\"analytics-table\">\n//           <thead>\n//             <tr>\n//               <th>Rank</th>\n//               <th>Slot ID</th>\n//               <th>Status</th>\n//               <th>Bookings</th>\n//               <th>Revenue (€)</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {topNSlots.map((slot, i) => (\n//               <tr key={slot.id}>\n//                 <td>{i + 1}</td>\n//                 <td>{slot.id}</td>\n//                 <td>\n//                   <span className={`status-badge status-${slot.status}`}>\n//                     {slot.status.replaceAll(\"_\", \" \")}\n//                   </span>\n//                 </td>\n//                 <td>{slot.totalBookings}</td>\n//                 <td>€{slot.totalRevenue}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport \"./App.css\";\n\nexport default function AnalyticsPage() {\n  const [analytics, setAnalytics] = useState({\n    slots: [],\n    summary: { statusCounts: {} }\n  });\n  const [showMode, setShowMode] = useState(\"top10\");\n\n  useEffect(() => {\n    fetch(\"http://localhost:4000/api/analytics\")\n      .then((res) => res.json())\n      .then(setAnalytics);\n  }, []);\n\n  const { slots, summary } = analytics;\n\n  // Calculate sensor status counts (for new doughnut chart)\n  const sensorStatusCounts = slots.reduce(\n    (acc, slot) => {\n      if (slot.sensorStatus === \"working\") acc.working += 1;\n      else if (slot.sensorStatus === \"out_of_status\") acc.outOfStatus += 1;\n      return acc;\n    },\n    { working: 0, outOfStatus: 0 }\n  );\n\n  // Prepare sensor status doughnut data\n  const sensorDoughnutData = {\n    labels: [\"Working Properly\", \"Out of Status\"],\n    datasets: [\n      {\n        data: [sensorStatusCounts.working, sensorStatusCounts.outOfStatus],\n        backgroundColor: [\"var(--success)\", \"var(--error)\"],\n        borderWidth: 2\n      }\n    ]\n  };\n\n  // Bar chart data (unchanged)\n  const topNSlots = [...slots]\n    .sort((a, b) => b.totalRevenue - a.totalRevenue)\n    .slice(0, showMode === \"top10\" ? 10 : slots.length);\n\n  const barChartData = {\n    labels: topNSlots.map((slot) => `Slot ${slot.id}`),\n    datasets: [\n      {\n        label: \"Bookings\",\n        data: topNSlots.map((slot) => slot.totalBookings),\n        backgroundColor: \"#1976d2\",\n        borderRadius: 6,\n        maxBarThickness: 28\n      },\n      {\n        label: \"Revenue (€)\",\n        data: topNSlots.map((slot) => slot.totalRevenue),\n        backgroundColor: \"#ff9800\",\n        borderRadius: 6,\n        maxBarThickness: 28\n      }\n    ]\n  };\n\n  const chartOptions = {\n    plugins: {\n      legend: { position: \"bottom\" }\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    barPercentage: 0.9,\n    categoryPercentage: 0.9,\n    scales: {\n      x: {\n        stacked: true,\n        grid: { display: false },\n        ticks: { autoSkip: true, maxRotation: 45, minRotation: 45 }\n      },\n      y: {\n        beginAtZero: true,\n        grid: { color: \"#ccc\" }\n      }\n    }\n  };\n\n  return (\n    <div className=\"analytics-page\">\n      <div className=\"analytics-summary\">\n        <div className=\"summary-cards\">\n          <div className=\"summary-card\">\n            <span>Total Slots</span>\n            <strong>{slots.length}</strong>\n          </div>\n          {/* Add more summary cards as needed */}\n        </div>\n      </div>\n      <div className=\"charts-section\">\n        {/* --- Updated Sensor Status Doughnut Chart (left) --- */}\n        <div className=\"chart-card\">\n          <h3>Slot Sensor Status</h3>\n          <Doughnut\n            data={sensorDoughnutData}\n            options={{\n              plugins: { legend: { position: \"bottom\" } }\n            }}\n            height={280}\n          />\n        </div>\n        {/* --- Top Bookings/Revenue Bar Chart (right) --- */}\n        <div className=\"chart-card\">\n          <h3>\n            Top Slots\n            <span className=\"chart-mode-tabs\">\n              <button\n                className={showMode === \"top10\" ? \"active\" : \"\"}\n                onClick={() => setShowMode(\"top10\")}\n              >\n                Top 10\n              </button>\n              <button\n                className={showMode === \"all\" ? \"active\" : \"\"}\n                onClick={() => setShowMode(\"all\")}\n              >\n                All\n              </button>\n            </span>\n          </h3>\n          <div className=\"bar-chart-container\" style={{ height: 340 }}>\n            <Bar data={barChartData} options={chartOptions} />\n          </div>\n        </div>\n      </div>\n      {/* Slot leaderboard table (unchanged) */}\n      <div className=\"leaderboard-section\">\n        <h3>Slot Leaderboard</h3>\n        <table className=\"analytics-table\">\n          <thead>\n            <tr>\n              <th>Rank</th>\n              <th>Slot ID</th>\n              <th>Status</th>\n              <th>Bookings</th>\n              <th>Revenue (€)</th>\n            </tr>\n          </thead>\n          <tbody>\n            {topNSlots.map((slot, i) => (\n              <tr key={slot.id}>\n                <td>{i + 1}</td>\n                <td>{slot.id}</td>\n                <td>{(slot.status || \"\").replaceAll(\"_\", \" \")}</td>\n                <td>{slot.totalBookings}</td>\n                <td>€{slot.totalRevenue}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
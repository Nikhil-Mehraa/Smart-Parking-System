{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilmehra/Downloads/prototype/ise-prototype copy 2/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { io } from 'socket.io-client';\nimport SlotGrid from './SlotGrid';\nimport AnalyticsPage from './AnalyticsPage';\nimport TimeSelector from './TimeSelector';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [slots, setSlots] = useState([]);\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  const [showAnalytics, setShowAnalytics] = useState(false);\n  const [date, setDate] = useState('');\n  const [start, setStart] = useState('');\n  const [end, setEnd] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [availableSlotData, setAvailableSlotData] = useState([]);\n  const [socket, setSocket] = useState(null);\n\n  // Initialize WebSocket connection\n  useEffect(() => {\n    const newSocket = io('http://localhost:4000');\n    setSocket(newSocket);\n    newSocket.on('slots', data => {\n      setSlots(data);\n    });\n    return () => newSocket.close();\n  }, []);\n\n  // Fetch available slots when date/time changes\n  useEffect(() => {\n    if (!date || !start || !end || !endDate) return;\n    fetch('http://localhost:4000/api/available-slots', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date,\n        start,\n        end,\n        endDate\n      })\n    }).then(res => res.json()).then(data => setAvailableSlotData(data.slots)).catch(err => console.error('Error fetching available slots:', err));\n  }, [date, start, end, endDate]);\n  const toggleSlotSelection = slotId => {\n    setSelectedSlots(prev => prev.includes(slotId) ? prev.filter(id => id !== slotId) : [...prev, slotId]);\n  };\n\n  // Calculate total price for selected slots (frontend-only, for UI)\n  const totalPrice = useMemo(() => {\n    return selectedSlots.reduce((sum, slotId) => {\n      const slot = availableSlotData.find(s => s.id === slotId);\n      return sum + ((slot === null || slot === void 0 ? void 0 : slot.price) || 0);\n    }, 0);\n  }, [selectedSlots, availableSlotData]);\n\n  // Handle reserving selected slots via WebSocket\n  const handleReserveSelected = () => {\n    if (!selectedSlots.length) {\n      alert('Please select at least one slot.');\n      return;\n    }\n    if (!date || !start || !end || !endDate) {\n      alert('Please select date and time.');\n      return;\n    }\n    if (!socket) {\n      alert('Connection error. Please refresh the page.');\n      return;\n    }\n    socket.emit('bookBulk', {\n      slotIds: selectedSlots,\n      date,\n      start,\n      end,\n      endDate\n    }, response => {\n      if (response.success) {\n        alert('Reservation successful!');\n        setSelectedSlots([]);\n      } else {\n        alert(response.msg || 'Reservation failed. Please try again.');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Parking Slot Reservation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"analytics-btn\",\n          onClick: () => setShowAnalytics(!showAnalytics),\n          children: showAnalytics ? 'Hide Analytics' : 'Show Analytics'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), showAnalytics ? /*#__PURE__*/_jsxDEV(AnalyticsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TimeSelector, {\n        date: date,\n        setDate: setDate,\n        start: start,\n        setStart: setStart,\n        end: setEnd,\n        setEnd: setEndDate,\n        endDate: endDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SlotGrid, {\n        slots: slots,\n        date: date,\n        start: start,\n        end: end,\n        endDate: endDate,\n        selectedSlots: selectedSlots,\n        toggleSlotSelection: toggleSlotSelection,\n        availableSlotData: availableSlotData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), selectedSlots.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"price-sum\",\n          children: [\"Total: \\u20AC\", totalPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"reserve-btn\",\n          onClick: handleReserveSelected,\n          disabled: !selectedSlots.length,\n          children: \"Reserve Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EBdd3Ba/3vRPFmwubw3tvwdLmUc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","io","SlotGrid","AnalyticsPage","TimeSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","slots","setSlots","selectedSlots","setSelectedSlots","showAnalytics","setShowAnalytics","date","setDate","start","setStart","end","setEnd","endDate","setEndDate","availableSlotData","setAvailableSlotData","socket","setSocket","newSocket","on","data","close","fetch","method","headers","body","JSON","stringify","then","res","json","catch","err","console","error","toggleSlotSelection","slotId","prev","includes","filter","id","totalPrice","reduce","sum","slot","find","s","price","handleReserveSelected","length","alert","emit","slotIds","response","success","msg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/nikhilmehra/Downloads/prototype/ise-prototype copy 2/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport { io } from 'socket.io-client';\nimport SlotGrid from './SlotGrid';\nimport AnalyticsPage from './AnalyticsPage';\nimport TimeSelector from './TimeSelector';\nimport './App.css';\n\nfunction App() {\n  const [slots, setSlots] = useState([]);\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  const [showAnalytics, setShowAnalytics] = useState(false);\n  const [date, setDate] = useState('');\n  const [start, setStart] = useState('');\n  const [end, setEnd] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [availableSlotData, setAvailableSlotData] = useState([]);\n  const [socket, setSocket] = useState(null);\n\n  // Initialize WebSocket connection\n  useEffect(() => {\n    const newSocket = io('http://localhost:4000');\n    setSocket(newSocket);\n\n    newSocket.on('slots', (data) => {\n      setSlots(data);\n    });\n\n    return () => newSocket.close();\n  }, []);\n\n  // Fetch available slots when date/time changes\n  useEffect(() => {\n    if (!date || !start || !end || !endDate) return;\n\n    fetch('http://localhost:4000/api/available-slots', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ date, start, end, endDate })\n    })\n      .then(res => res.json())\n      .then(data => setAvailableSlotData(data.slots))\n      .catch(err => console.error('Error fetching available slots:', err));\n  }, [date, start, end, endDate]);\n\n  const toggleSlotSelection = (slotId) => {\n    setSelectedSlots(prev =>\n      prev.includes(slotId)\n        ? prev.filter(id => id !== slotId)\n        : [...prev, slotId]\n    );\n  };\n\n  // Calculate total price for selected slots (frontend-only, for UI)\n  const totalPrice = useMemo(() => {\n    return selectedSlots.reduce((sum, slotId) => {\n      const slot = availableSlotData.find(s => s.id === slotId);\n      return sum + (slot?.price || 0);\n    }, 0);\n  }, [selectedSlots, availableSlotData]);\n\n  // Handle reserving selected slots via WebSocket\n  const handleReserveSelected = () => {\n    if (!selectedSlots.length) {\n      alert('Please select at least one slot.');\n      return;\n    }\n    if (!date || !start || !end || !endDate) {\n      alert('Please select date and time.');\n      return;\n    }\n    if (!socket) {\n      alert('Connection error. Please refresh the page.');\n      return;\n    }\n\n    socket.emit(\n      'bookBulk',\n      { slotIds: selectedSlots, date, start, end, endDate },\n      (response) => {\n        if (response.success) {\n          alert('Reservation successful!');\n          setSelectedSlots([]);\n        } else {\n          alert(response.msg || 'Reservation failed. Please try again.');\n        }\n      }\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Parking Slot Reservation</h1>\n        <div>\n          <button\n            id=\"analytics-btn\"\n            onClick={() => setShowAnalytics(!showAnalytics)}\n          >\n            {showAnalytics ? 'Hide Analytics' : 'Show Analytics'}\n          </button>\n        </div>\n      </header>\n\n      {showAnalytics ? (\n        <AnalyticsPage />\n      ) : (\n        <>\n          <TimeSelector\n            date={date}\n            setDate={setDate}\n            start={start}\n            setStart={setStart}\n            end={setEnd}\n            setEnd={setEndDate}\n            endDate={endDate}\n          />\n\n          <SlotGrid\n            slots={slots}\n            date={date}\n            start={start}\n            end={end}\n            endDate={endDate}\n            selectedSlots={selectedSlots}\n            toggleSlotSelection={toggleSlotSelection}\n            availableSlotData={availableSlotData}\n          />\n\n          {selectedSlots.length > 0 && (\n            <div className=\"slot-actions\">\n              <span className=\"price-sum\">Total: €{totalPrice}</span>\n              <button\n                id=\"reserve-btn\"\n                onClick={handleReserveSelected}\n                disabled={!selectedSlots.length}\n              >\n                Reserve Selected\n              </button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
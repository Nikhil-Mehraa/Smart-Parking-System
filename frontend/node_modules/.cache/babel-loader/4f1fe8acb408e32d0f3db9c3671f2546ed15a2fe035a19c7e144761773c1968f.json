{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilmehra/Downloads/prototype/final/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { io } from 'socket.io-client';\nimport SlotGrid from './SlotGrid';\nimport AnalyticsPage from './AnalyticsPage';\nimport TimeSelector from './TimeSelector';\nimport AuthPage from './AuthPage';\nimport './App.css';\nimport { Chart as ChartJS, ArcElement, BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  // 1. Track current user from localStorage\n  const [currentUser, setCurrentUser] = useState(localStorage.getItem('currentUser'));\n\n  // 2. Logout handler\n  const handleLogout = () => {\n    localStorage.removeItem('currentUser');\n    setCurrentUser(null);\n  };\n\n  // --- YOUR EXISTING DASHBOARD STATE ---\n  const [slots, setSlots] = useState([]);\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  const [showAnalytics, setShowAnalytics] = useState(false);\n  const [date, setDate] = useState('');\n  const [start, setStart] = useState('');\n  const [end, setEnd] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [availableSlotData, setAvailableSlotData] = useState([]);\n  const [socket, setSocket] = useState(null);\n\n  // NEW: Owner base price input state\n  const [basePrice, setBasePrice] = useState(1.0);\n\n  // --- YOUR EXISTING SOCKET + FETCH LOGIC ---\n  useEffect(() => {\n    const newSocket = io('http://localhost:4000');\n    setSocket(newSocket);\n    newSocket.on('slots', data => {\n      setSlots(data);\n    });\n    return () => newSocket.close();\n  }, []);\n  useEffect(() => {\n    if (!date || !start || !end || !endDate) return;\n    fetch('http://localhost:4000/api/available-slots', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date,\n        start,\n        end,\n        endDate\n      })\n    }).then(res => res.json()).then(data => setAvailableSlotData(data.slots)).catch(err => console.error('Error fetching available slots:', err));\n  }, [date, start, end, endDate]);\n  const toggleSlotSelection = slotId => {\n    setSelectedSlots(prev => prev.includes(slotId) ? prev.filter(id => id !== slotId) : [...prev, slotId]);\n  };\n  const totalPrice = useMemo(() => {\n    return selectedSlots.reduce((sum, slotId) => {\n      const slot = availableSlotData.find(s => s.id === slotId);\n      return sum + ((slot === null || slot === void 0 ? void 0 : slot.price) || 0);\n    }, 0);\n  }, [selectedSlots, availableSlotData]);\n  const handleReserveSelected = () => {\n    if (!selectedSlots.length) {\n      alert('Please select at least one slot.');\n      return;\n    }\n    if (!date || !start || !end || !endDate) {\n      alert('Please select date and time.');\n      return;\n    }\n    if (!socket) {\n      alert('Connection error. Please refresh the page.');\n      return;\n    }\n    socket.emit('bookBulk', {\n      slotIds: selectedSlots,\n      date,\n      start,\n      end,\n      endDate\n    }, response => {\n      if (response.success) {\n        alert('Reservation successful!');\n        setSelectedSlots([]);\n      } else {\n        alert(response.msg || 'Reservation failed. Please try again.');\n      }\n    });\n  };\n\n  // 3. Redirect to AuthPage if not logged in\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(AuthPage, {\n      onAuthSuccess: () => setCurrentUser(localStorage.getItem('currentUser'))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 4. Dashboard with Logout (only change: base price input above TimeSelector)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: showAnalytics ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"analytics-btn\",\n        onClick: () => setShowAnalytics(false),\n        children: \"\\u2190 Back to Slots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AnalyticsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '24px',\n          background: 'rgba(245, 249, 252, 0.9)',\n          borderRadius: '12px',\n          padding: '20px 24px',\n          boxShadow: '0 4px 14px rgba(0, 0, 0, 0.05)',\n          border: '1px solid #eee',\n          maxWidth: '400px',\n          width: '100%',\n          marginTop: '-12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontSize: '1.1em',\n            fontWeight: 600,\n            color: '#1a1a1a',\n            marginBottom: '8px',\n            display: 'block'\n          },\n          children: \"Base Price per Hour (Owner Only)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '12px',\n            alignItems: 'center',\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.1\",\n            min: \"0\",\n            value: basePrice,\n            onChange: e => setBasePrice(Number(e.target.value)),\n            style: {\n              width: '80px',\n              padding: '12px 16px',\n              borderRadius: '8px',\n              border: '1px solid #bbb',\n              fontFamily: 'inherit',\n              fontSize: '1.08em',\n              fontWeight: 500,\n              color: '#1a1a1a',\n              background: 'white'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '1.1em',\n              fontWeight: 600,\n              color: '#1a1a1a'\n            },\n            children: \"\\u20AC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Parking Slot Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-btn\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TimeSelector, {\n        date: date,\n        setDate: setDate,\n        start: start,\n        setStart: setStart,\n        end: end,\n        setEnd: setEnd,\n        endDate: endDate,\n        setEndDate: setEndDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"price-sum\",\n          children: selectedSlots.length ? `Total Price: €${totalPrice}` : 'Select slot(s)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"reserve-btn\",\n          onClick: handleReserveSelected,\n          children: [\"Reserve Selected (\", selectedSlots.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SlotGrid, {\n        slots: slots,\n        date: date,\n        start: start,\n        end: end,\n        endDate: endDate,\n        selectedSlots: selectedSlots,\n        toggleSlotSelection: toggleSlotSelection,\n        availableSlotData: availableSlotData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"analytics-btn\",\n        onClick: () => setShowAnalytics(true),\n        children: \"Show Analytics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Dse18rTS/Wp01gOVqtOgZO191tA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","io","SlotGrid","AnalyticsPage","TimeSelector","AuthPage","Chart","ChartJS","ArcElement","BarElement","CategoryScale","LinearScale","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","App","_s","currentUser","setCurrentUser","localStorage","getItem","handleLogout","removeItem","slots","setSlots","selectedSlots","setSelectedSlots","showAnalytics","setShowAnalytics","date","setDate","start","setStart","end","setEnd","endDate","setEndDate","availableSlotData","setAvailableSlotData","socket","setSocket","basePrice","setBasePrice","newSocket","on","data","close","fetch","method","headers","body","JSON","stringify","then","res","json","catch","err","console","error","toggleSlotSelection","slotId","prev","includes","filter","id","totalPrice","reduce","sum","slot","find","s","price","handleReserveSelected","length","alert","emit","slotIds","response","success","msg","onAuthSuccess","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","style","marginBottom","background","borderRadius","padding","boxShadow","border","maxWidth","width","marginTop","fontSize","fontWeight","color","display","gap","alignItems","type","step","min","value","onChange","e","Number","target","fontFamily","_c","$RefreshReg$"],"sources":["/Users/nikhilmehra/Downloads/prototype/final/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport { io } from 'socket.io-client';\nimport SlotGrid from './SlotGrid';\nimport AnalyticsPage from './AnalyticsPage';\nimport TimeSelector from './TimeSelector';\nimport AuthPage from './AuthPage';\nimport './App.css';\nimport { Chart as ChartJS, ArcElement, BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(ArcElement, BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\n\nfunction App() {\n  // 1. Track current user from localStorage\n  const [currentUser, setCurrentUser] = useState(localStorage.getItem('currentUser'));\n\n  // 2. Logout handler\n  const handleLogout = () => {\n    localStorage.removeItem('currentUser');\n    setCurrentUser(null);\n  };\n\n  // --- YOUR EXISTING DASHBOARD STATE ---\n  const [slots, setSlots] = useState([]);\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  const [showAnalytics, setShowAnalytics] = useState(false);\n  const [date, setDate] = useState('');\n  const [start, setStart] = useState('');\n  const [end, setEnd] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [availableSlotData, setAvailableSlotData] = useState([]);\n  const [socket, setSocket] = useState(null);\n\n  // NEW: Owner base price input state\n  const [basePrice, setBasePrice] = useState(1.0);\n\n  // --- YOUR EXISTING SOCKET + FETCH LOGIC ---\n  useEffect(() => {\n    const newSocket = io('http://localhost:4000');\n    setSocket(newSocket);\n    newSocket.on('slots', (data) => {\n      setSlots(data);\n    });\n    return () => newSocket.close();\n  }, []);\n\n  useEffect(() => {\n    if (!date || !start || !end || !endDate) return;\n    fetch('http://localhost:4000/api/available-slots', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ date, start, end, endDate }),\n    })\n      .then((res) => res.json())\n      .then((data) => setAvailableSlotData(data.slots))\n      .catch((err) => console.error('Error fetching available slots:', err));\n  }, [date, start, end, endDate]);\n\n  const toggleSlotSelection = (slotId) => {\n    setSelectedSlots((prev) =>\n      prev.includes(slotId) ? prev.filter((id) => id !== slotId) : [...prev, slotId]\n    );\n  };\n\n  const totalPrice = useMemo(() => {\n    return selectedSlots.reduce((sum, slotId) => {\n      const slot = availableSlotData.find((s) => s.id === slotId);\n      return sum + (slot?.price || 0);\n    }, 0);\n  }, [selectedSlots, availableSlotData]);\n\n  const handleReserveSelected = () => {\n    if (!selectedSlots.length) {\n      alert('Please select at least one slot.');\n      return;\n    }\n    if (!date || !start || !end || !endDate) {\n      alert('Please select date and time.');\n      return;\n    }\n    if (!socket) {\n      alert('Connection error. Please refresh the page.');\n      return;\n    }\n    socket.emit(\n      'bookBulk',\n      { slotIds: selectedSlots, date, start, end, endDate },\n      (response) => {\n        if (response.success) {\n          alert('Reservation successful!');\n          setSelectedSlots([]);\n        } else {\n          alert(response.msg || 'Reservation failed. Please try again.');\n        }\n      }\n    );\n  };\n\n  // 3. Redirect to AuthPage if not logged in\n  if (!currentUser) {\n    return <AuthPage onAuthSuccess={() => setCurrentUser(localStorage.getItem('currentUser'))} />;\n  }\n\n  // 4. Dashboard with Logout (only change: base price input above TimeSelector)\n  return (\n    <div className=\"App\">\n      {showAnalytics ? (\n        <>\n          <button className=\"analytics-btn\" onClick={() => setShowAnalytics(false)}>\n            ← Back to Slots\n          </button>\n          <AnalyticsPage />\n        </>\n      ) : (\n        <>\n          {/* ----- Base Price Input Block (NEW) ----- */}\n          <div style={{ marginBottom: '24px', background: 'rgba(245, 249, 252, 0.9)', borderRadius: '12px', padding: '20px 24px', boxShadow: '0 4px 14px rgba(0, 0, 0, 0.05)', border: '1px solid #eee', maxWidth: '400px', width: '100%', marginTop: '-12px' }}>\n            <label style={{ fontSize: '1.1em', fontWeight: 600, color: '#1a1a1a', marginBottom: '8px', display: 'block' }}>\n              Base Price per Hour (Owner Only)\n            </label>\n            <div style={{ display: 'flex', gap: '12px', alignItems: 'center', width: '100%' }}>\n              <input\n                type=\"number\"\n                step=\"0.1\"\n                min=\"0\"\n                value={basePrice}\n                onChange={(e) => setBasePrice(Number(e.target.value))}\n                style={{\n                  width: '80px',\n                  padding: '12px 16px',\n                  borderRadius: '8px',\n                  border: '1px solid #bbb',\n                  fontFamily: 'inherit',\n                  fontSize: '1.08em',\n                  fontWeight: 500,\n                  color: '#1a1a1a',\n                  background: 'white'\n                }}\n              />\n              <span style={{ fontSize: '1.1em', fontWeight: 600, color: '#1a1a1a' }}>€</span>\n            </div>\n          </div>\n          {/* ----- End New Block ----- */}\n          <header>\n            <h1>Parking Slot Dashboard</h1>\n            <button className=\"logout-btn\" onClick={handleLogout}>\n              Logout\n            </button>\n          </header>\n          <TimeSelector\n            date={date}\n            setDate={setDate}\n            start={start}\n            setStart={setStart}\n            end={end}\n            setEnd={setEnd}\n            endDate={endDate}\n            setEndDate={setEndDate}\n          />\n          <div className=\"slot-actions\">\n            <span className=\"price-sum\">\n              {selectedSlots.length ? `Total Price: €${totalPrice}` : 'Select slot(s)'}\n            </span>\n            <button id=\"reserve-btn\" onClick={handleReserveSelected}>\n              Reserve Selected ({selectedSlots.length})\n            </button>\n          </div>\n          <SlotGrid\n            slots={slots}\n            date={date}\n            start={start}\n            end={end}\n            endDate={endDate}\n            selectedSlots={selectedSlots}\n            toggleSlotSelection={toggleSlotSelection}\n            availableSlotData={availableSlotData}\n          />\n          <button id=\"analytics-btn\" onClick={() => setShowAnalytics(true)}>\n            Show Analytics\n          </button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}